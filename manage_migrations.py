#!/usr/bin/env python3
"""
Script para gerenciar migra√ß√µes do banco de dados
"""

import os
import sys
import subprocess
from pathlib import Path

def run_command(command, description):
    """Executa um comando e mostra o resultado"""
    print(f"\nüîÑ {description}")
    print(f"Comando: {command}")
    
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        print(f"‚úÖ {description} - Sucesso!")
        if result.stdout:
            print(result.stdout)
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå {description} - Erro!")
        print(f"Erro: {e.stderr}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Gerenciador de Migra√ß√µes do Banco de Dados")
    print("=" * 50)
    
    # Verificar se estamos no diret√≥rio correto
    if not os.path.exists("alembic.ini"):
        print("‚ùå Erro: Execute este script no diret√≥rio raiz do projeto")
        sys.exit(1)
    
    # Verificar se o Alembic est√° instalado
    try:
        import alembic
        print("‚úÖ Alembic encontrado")
    except ImportError:
        print("‚ùå Alembic n√£o encontrado. Instalando...")
        if not run_command("pip install alembic", "Instalando Alembic"):
            sys.exit(1)
    
    # Menu de op√ß√µes
    while True:
        print("\nüìã Op√ß√µes dispon√≠veis:")
        print("1. Inicializar migra√ß√µes (primeira vez)")
        print("2. Criar nova migra√ß√£o")
        print("3. Aplicar migra√ß√µes pendentes")
        print("4. Verificar status das migra√ß√µes")
        print("5. Fazer downgrade da √∫ltima migra√ß√£o")
        print("6. Ver hist√≥rico de migra√ß√µes")
        print("0. Sair")
        
        choice = input("\nEscolha uma op√ß√£o: ").strip()
        
        if choice == "1":
            print("\nüîß Inicializando migra√ß√µes...")
            if run_command("alembic init src/backEnd/database/migrations", "Inicializando Alembic"):
                print("‚úÖ Migra√ß√µes inicializadas com sucesso!")
                print("üìù Agora voc√™ pode criar migra√ß√µes com a op√ß√£o 2")
        
        elif choice == "2":
            message = input("Digite uma descri√ß√£o para a migra√ß√£o: ").strip()
            if message:
                if run_command(f'alembic revision --autogenerate -m "{message}"', "Criando nova migra√ß√£o"):
                    print("‚úÖ Migra√ß√£o criada com sucesso!")
                    print("üìù Aplique a migra√ß√£o com a op√ß√£o 3")
            else:
                print("‚ùå Descri√ß√£o √© obrigat√≥ria")
        
        elif choice == "3":
            if run_command("alembic upgrade head", "Aplicando migra√ß√µes"):
                print("‚úÖ Migra√ß√µes aplicadas com sucesso!")
        
        elif choice == "4":
            if run_command("alembic current", "Verificando migra√ß√£o atual"):
                print("\nüìä Status das migra√ß√µes:")
                run_command("alembic history", "Hist√≥rico de migra√ß√µes")
        
        elif choice == "5":
            if run_command("alembic downgrade -1", "Fazendo downgrade"):
                print("‚úÖ Downgrade realizado com sucesso!")
        
        elif choice == "6":
            run_command("alembic history --verbose", "Hist√≥rico detalhado")
        
        elif choice == "0":
            print("\nüëã Saindo...")
            break
        
        else:
            print("‚ùå Op√ß√£o inv√°lida")

if __name__ == "__main__":
    main()
